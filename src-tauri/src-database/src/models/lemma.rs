//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use sea_orm::prelude::async_trait::async_trait;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "lemma")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub tarikh_masuk: DateTimeUtc,
    pub nama: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::konsep::Entity")]
    Konsep,
}

impl Related<super::konsep::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Konsep.def()
    }
}

#[async_trait]
impl ActiveModelBehavior for ActiveModel {}
